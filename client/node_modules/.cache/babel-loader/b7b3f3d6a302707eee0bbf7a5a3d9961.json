{"ast":null,"code":"var _jsxFileName = \"/Users/rchung/Development/notable/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Sidebar } from \"./components/SideBar\";\nimport { Appointments } from \"./components/Appointments\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      physicians: \"\",\n      currentPhysician: null,\n      appointments: []\n    };\n\n    this.componentDidMount = () => {\n      this.callApi().then(resp => {\n        this.setState({\n          physicians: resp.physicians\n        });\n      }).catch(err => console.error(err));\n    };\n\n    this.callApi = async () => {\n      const response = await fetch(\"/api/physicians\");\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch(\"/api/appointments\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          physicianId: this.state.currentPhysician.id\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        appointments: body\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          physicians = _this$state.physicians,\n          currentPhysician = _this$state.currentPhysician,\n          _this$state$appointme = _this$state.appointments,\n          appointments = _this$state$appointme === void 0 ? [] : _this$state$appointme;\n    console.log(physicians);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, physicians), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Post to Server:\")), React.createElement(\"input\", {\n      type: \"text\",\n      value: currentPhysician,\n      onChange: e => this.setState({\n        physician: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, appointments));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rchung/Development/notable/client/src/App.js"],"names":["React","Component","Sidebar","Appointments","App","state","physicians","currentPhysician","appointments","componentDidMount","callApi","then","resp","setState","catch","err","console","error","response","fetch","body","json","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","physicianId","id","text","render","log","physician","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Sidebar } from \"./components/SideBar\";\nimport { Appointments } from \"./components/Appointments\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    physicians: \"\",\n    currentPhysician: null,\n    appointments: []\n  };\n  componentDidMount = () => {\n    this.callApi()\n      .then(resp => {\n        this.setState({ physicians: resp.physicians });\n      })\n      .catch(err => console.error(err));\n  };\n  callApi = async () => {\n    const response = await fetch(\"/api/physicians\");\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  };\n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"/api/appointments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ physicianId: this.state.currentPhysician.id })\n    });\n    const body = await response.text();\n    this.setState({ appointments: body });\n  };\n  render() {\n    const { physicians, currentPhysician, appointments = [] } = this.state;\n    console.log(physicians);\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\"></header>\n        <p>{physicians}</p>\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <strong>Post to Server:</strong>\n          </p>\n          <input\n            type=\"text\"\n            value={currentPhysician}\n            onChange={e => this.setState({ physician: e.target.value })}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <p>{appointments}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}